The problem at hand is to provide a solution to Wave's business.

1.SELECT COUNT(*) FROM public.users;
-- the * will help to retrive all the users in the users table and then later count it with COUNT function


2.SELECT COUNT (transfer_id) FROM public.transfer
  WHERE send_amount_currency = 'CFA'
  --this query just select the amount of money that was sent which was CFA.


3. SELECT DISTINCT COUNT (u_id) FROM public.transfers
    WHERE send_amount_currency = 'CFA'
   


4.SELECT TO_CHAR(TO _DATE(EXTRACT (MONTH from agent_transactions.when_created)::text,'MM'), 'Month') AS months,
   COUNT (atx_id) FROM public.agent_transactions
   WHERE EXTRACT (YEAR from agent_transactions.when_created) = 2018
   GROUP BY ECTRACT (MONTH from agent_transactions.when_created);



5. SELECT COUNT )agents.agent_id)
   AS number_net_depositors
   FROM public.agent_transactions
   WHERE amount < 0
   AND agent_transactions.agent_id = agents.agent_id
   AND agent_transactions.when_created > current_date-interval '7 days'


6.SELECT city, COUNT(atx_id) AS volume

  FROM public.agents, public.agent_transactions
  
WHERE agent_transactions.when_created BETWEEN now() And now()-interval'7 days'
GROUP BY city;


7. SELECT City, Volume, Country INTO atx_volume_city_summary_with_Country FROM ( Select agents.city AS City, agents.country AS Country, count(agent_transactions.atx_id) AS Volume 
   FROM agents INNER JOIN agent_transactions ON agents.agent_id = agent_transactions.agent_id 
   where (agent_transactions.when_created > (NOW() - INTERVAL '1 week')) 
   GROUP BY agents.country,agents.city) as atx_volume_summary_with_Country;



8. CREATE VIEW send_ne_volume2 AS SELECT COUNT(atx_id) AS volume,kind,country

   FROM public.agent_transactions,public.transfers, public.agents
   
WHERE agent_transactions.when_created BETWEEN '2018-11-23' AND '2018-12-30'
--agent_transactions.when_created>current_date -interval '7 days'
GROUP BY kind,country;



9. 


SELECT count(transfers.source_wallet_id) AS Unique_Senders, count(transfer_id)
   AS Transaction_count, transfers.kind AS Transfer_Kind, wallets.ledger_location 
   AS Country, sum(transfers.send_amount_scalar) 
   AS Volume FROM transfers INNER JOIN wallets ON transfers.source_wallet_id = wallets.wallet_id 
   WHERE (transfers.when_created > (NOW() - INTERVAL '1 week')) 
   GROUP BY wallets.ledger_location, transfers.kind;



10.
SELECT source_wallet_id, send_amount_scalar FROM transfers
   
WHERE send_amount_currency = 'CFA' AND (send_amount_scalar>10000000) AND (transfers.when_created > (now() - INTERVAL '1 month'));
